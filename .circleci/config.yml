defaults: &defaults
  docker:
    - image: circleci/openjdk:11.0.3-jdk-stretch-node-browsers-legacy
  working_directory: ~
  environment:
    PROTEST_SPRING_DATASOURCE_USERNAME: "LVAT"
    PROTEST_SPRING_DATASOURCE_PASSWORD: "123456"
version: 2
jobs:
  pre_build_test_setup:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: inject env var to config file
          command: |
            sed -i 's/PROTEST_SPRING_DATASOURCE_USERNAME/'${PROTEST_SPRING_DATASOURCE_USERNAME}'/g' ~/project/src/main/resources/application.properties
            sed -i 's/PROTEST_SPRING_DATASOURCE_PASSWORD/'${PROTEST_SPRING_DATASOURCE_PASSWORD}'/g' ~/project/src/main/resources/application.properties
      - persist_to_workspace:
          root: .
          paths:
            - .

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - circleci-test-{{ .Branch }}-{{ checksum "pom.xml" }}
            - circleci-test-{{ .Branch }}
            - circleci-test
      - run:
          name: build
          command: mvn install -Dmaven.test.skip=true
      - save_cache:
          paths:
            - ~/.m2
          key: circleci-test-{{ .Branch }}-{{ checksum "pom.xml" }}

  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - circleci-test-{{ .Branch }}-{{ checksum "pom.xml" }}
            - circleci-test-{{ .Branch }}
            - circleci-test
      - run:
          name: test
          command: mvn test
      - save_cache:
          paths:
            - ~/.m2
          key: circleci-test-{{ .Branch }}-{{ checksum "pom.xml" }}

  pre_deploy_setup:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: install google cloud sdk
          command: |
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
            sudo apt-get update && sudo apt-get install google-cloud-sdk
      - run: gcloud --version

workflows:
  version: 2
  haha:
    jobs:
      - pre_build_test_setup
      - build:
          requires:
            - pre_build_test_setup
      - test:
          requires:
            - pre_build_test_setup
      - approve:
          type: approval
          requires:
            - test
            - build
      - pre_deploy_setup:
          requires:
            - approve